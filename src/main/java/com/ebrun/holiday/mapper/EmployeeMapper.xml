<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ebrun.holiday.dao.EmployeeMapper">
    <resultMap id="BaseResultMap" type="com.ebrun.holiday.model.Employee">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="employee_number" property="employeeNumber" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="entry_date" property="entryDate" jdbcType="TIMESTAMP"/>
        <result column="leave_date" property="leaveDate" jdbcType="TIMESTAMP"/>
        <result column="department_id" property="departmentId" jdbcType="INTEGER"/>
        <result column="if_administration" property="ifAdministration" jdbcType="BIT"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, employee_number, name, password, email, entry_date, leave_date, department_id, 
    if_administration, remark
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from employee
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.ebrun.holiday.model.Employee">
    insert into employee (id, employee_number, name, 
      password, email, entry_date, 
      leave_date, department_id, if_administration, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{employeeNumber,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{entryDate,jdbcType=TIMESTAMP}, 
      #{leaveDate,jdbcType=TIMESTAMP}, #{departmentId,jdbcType=INTEGER}, #{ifAdministration,jdbcType=BIT}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.ebrun.holiday.model.Employee" useGeneratedKeys="true" keyProperty="id">
        insert into employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="employeeNumber != null">
                employee_number,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="entryDate != null">
                entry_date,
            </if>
            <if test="leaveDate != null">
                leave_date,
            </if>
            <if test="departmentId != null">
                department_id,
            </if>
            <if test="ifAdministration != null">
                if_administration,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="employeeNumber != null">
                #{employeeNumber,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="entryDate != null">
                #{entryDate,jdbcType=TIMESTAMP},
            </if>
            <if test="leaveDate != null">
                #{leaveDate,jdbcType=TIMESTAMP},
            </if>
            <if test="departmentId != null">
                #{departmentId,jdbcType=INTEGER},
            </if>
            <if test="ifAdministration != null">
                #{ifAdministration,jdbcType=BIT},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ebrun.holiday.model.Employee">
        update employee
        <set>
            <if test="employeeNumber != null">
                employee_number = #{employeeNumber,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="entryDate != null">
                entry_date = #{entryDate,jdbcType=TIMESTAMP},
            </if>
            <if test="leaveDate != null">
                leave_date = #{leaveDate,jdbcType=TIMESTAMP},
            </if>
            <if test="departmentId != null">
                department_id = #{departmentId,jdbcType=INTEGER},
            </if>
            <if test="ifAdministration != null">
                if_administration = #{ifAdministration,jdbcType=BIT},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ebrun.holiday.model.Employee">
    update employee
    set employee_number = #{employeeNumber,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      entry_date = #{entryDate,jdbcType=TIMESTAMP},
      leave_date = #{leaveDate,jdbcType=TIMESTAMP},
      department_id = #{departmentId,jdbcType=INTEGER},
      if_administration = #{ifAdministration,jdbcType=BIT},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    
    
    
    <select id="selectByEmail" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from employee
        where email = #{email,jdbcType=VARCHAR}
    </select>
    <select id="selectEmployeeByPage" resultType="java.util.Map">
        select e.id as id, e.employee_number as employee_number, e.name as name, e.password as password,
        e.email as email, e.entry_date as entry_date, e.leave_date as leave_date, e.department_id as department_id,
        e.if_administration as if_administration, e.remark as remark, d.department_name as department_name
        from employee e join department d on e.department_id = d.id
        <where>
            <if test="employeeKeyword != null and employeeKeyword !=''">
                e.employee_number like #{employeeKeyword}
            </if>
            <if test="employeeKeyword != null and employeeKeyword !=''">
                or e.name like concat('%',#{employeeKeyword},'%')
            </if>
            <if test="employeeKeyword != null and employeeKeyword !=''">
                or e.email like concat('%',#{employeeKeyword},'%')
            </if>
            <if test="employeeKeyword != null and employeeKeyword !=''">
                or e.entry_date between concat(#{employeeKeyword},'-01-01 00:00:00') and concat(#{employeeKeyword},'-12-31 23:59:59')
            </if>
            <if test="employeeKeyword != null and employeeKeyword !=''">
                or d.department_name like concat('%',#{employeeKeyword},'%')
            </if>
        </where>
        order by e.id limit #{index,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
    </select>
    <select id="selectEmployeeCount" resultType="java.lang.Integer">
        select count(*) from employee e join department d on e.department_id = d.id
        <where>
            <if test="employeeKeyword != null and employeeKeyword !=''">
                e.employee_number like #{employeeKeyword}
            </if>
            <if test="employeeKeyword != null and employeeKeyword !=''">
                or e.name like concat('%',#{employeeKeyword},'%')
            </if>
            <if test="employeeKeyword != null and employeeKeyword !=''">
                or e.email like concat('%',#{employeeKeyword},'%')
            </if>
            <if test="employeeKeyword != null and employeeKeyword !=''">
                or e.entry_date between concat(#{employeeKeyword},'-01-01 00:00:00') and concat(#{employeeKeyword},'-12-31 23:59:59')
            </if>
            <if test="employeeKeyword != null and employeeKeyword !=''">
                or d.department_name like concat('%',#{employeeKeyword},'%')
            </if>
        </where>
    </select>
    <select id="selectEmployeeByKeyword" resultType="java.util.Map" parameterType="java.lang.String">
        select e.id as id, e.employee_number as employee_number, e.name as employee_name, e.email as email 
        from employee e 
        <where>
            <if test="employeeKeyword != null and employeeKeyword !=''">
                e.employee_number like #{employeeKeyword}
            </if>
            <if test="employeeKeyword != null and employeeKeyword !=''">
                or e.name like concat('%',#{employeeKeyword},'%')
            </if>
            <if test="employeeKeyword != null and employeeKeyword !=''">
                or e.email like concat('%',#{employeeKeyword},'%')
            </if>
        </where>
        order by e.id
    </select>
</mapper>